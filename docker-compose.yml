services:
  traefik:
    image: traefik:3.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    env_file: .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN}`)"
        #- "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${BASE_DOMAIN}`)"
        #- "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${BASE_DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${BASE_DOMAIN}"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  start-page:
    extends:
      file: apps/start-page/docker-compose.yml
      service: start-page
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.startPage.rule=Host(`start.${BASE_DOMAIN}`)"
      - "traefik.http.routers.startPage.entrypoints=https"
      - "traefik.http.routers.startPage.tls=true"
      - "traefik.http.services.startPage.loadbalancer.server.port=80"
    networks:
      - proxy

  freshrss:
    extends:
      file: apps/freshrss/docker-compose.yml
      service: freshrss
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.freshrss.rule=Host(`freshrss.${BASE_DOMAIN}`)"
      - "traefik.http.routers.freshrss.entrypoints=https"
      - "traefik.http.routers.freshrss.tls=true"
      - "traefik.http.services.freshrss.loadbalancer.server.port=80"
    networks:
      - proxy

  uptime-kuma:
    extends:
      file: apps/uptime-kuma/docker-compose.yml
      service: uptime-kuma
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptimeKuma.rule=Host(`uptime-kuma.${BASE_DOMAIN}`)"
      - "traefik.http.routers.uptimeKuma.entrypoints=https"
      - "traefik.http.routers.uptimeKuma.tls=true"
      - "traefik.http.services.uptimeKuma.loadbalancer.server.port=3001"
    networks:
      - proxy

  pihole:
    extends:
      file: apps/pihole/docker-compose.yml
      service: pihole
    networks:
      pihole_network:
        ipv4_address: 192.168.178.151

networks:
  proxy:
    external: true

  pihole_network:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.178.0/24
          gateway: 192.168.178.1
