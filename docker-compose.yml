services:
  traefik:
    image: traefik:3.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    env_file: .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - /home/daniel/homeserver-data/traefik/traefik.log:/var/log/traefik.log
      - /home/daniel/homeserver-data/traefik/access.log:/var/log/access.log
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${BASE_DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${BASE_DOMAIN}"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.middlewares=tinyauth"

  dozzle:
    extends:
      file: apps/dozzle/docker-compose.yml
      service: dozzle
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.rule=Host(`dozzle.${BASE_DOMAIN}`)"
      - "traefik.http.routers.dozzle.entrypoints=https"
      - "traefik.http.routers.dozzle.tls=true"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
      - "traefik.http.routers.dozzle.middlewares=tinyauth"
    networks:
      - proxy

  start-page:
    extends:
      file: apps/start-page/docker-compose.yml
      service: start-page
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.startPage.rule=Host(`start.${BASE_DOMAIN}`)"
      - "traefik.http.routers.startPage.entrypoints=https"
      - "traefik.http.routers.startPage.tls=true"
      - "traefik.http.services.startPage.loadbalancer.server.port=80"
      - "traefik.http.routers.startPage.middlewares=tinyauth"
    networks:
      - proxy

  tinyauth:
    extends:
      file: apps/tinyauth/docker-compose.yml
      service: tinyauth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tinyauth.rule=Host(`auth.${BASE_DOMAIN}`)"
      - "traefik.http.routers.tinyauth.entrypoints=https"
      - "traefik.http.routers.tinyauth.tls=true"
      - "traefik.http.middlewares.tinyauth.forwardauth.address=http://tinyauth:3000/api/auth/traefik"
    networks:
      - proxy

  whoami:
    container_name: whoami
    image: traefik/whoami:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${BASE_DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=https"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.whoami.middlewares=tinyauth"
    networks:
      - proxy

  pihole:
    extends:
      file: apps/pihole/docker-compose.yml
      service: pihole
    networks:
      pihole_network:
        ipv4_address: 192.168.178.151

networks:
  proxy:
    external: true

  pihole_network:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.178.0/24
          gateway: 192.168.178.1
